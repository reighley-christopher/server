fs = require("fs");
express = require("express");
Promise = require("promise");
http = require("http");
ps = require("child_process")

var app = express();
var catalog = {};
var glyphs_text = "";
var current_processes = [];
/*read catalog of services*/

function read_catalog(name, data) {
   var meta = /#META(.*)/g; 
   var s;
   var json = [];
   var result = null;
   try {
     while(s = meta.exec(data)) {json.push(s[1]);}
     result = JSON.parse(json.join(""));
   } catch(er) {
     result = er.toString();
   }
   catalog[name] = {"schema":result};
   };

function open_output(name) {
   };

function update(name){
   fs.readFile("/srv/run_master/components/"+name, {encoding:"ASCII"} ,function(err, data){
     if(!err) { read_catalog(name, data); } else { delete catalog[name]; }
   });
};

function update_glyphs(){
   glyphs_text = "";
   fs.readdir("/srv/run_master/glyphs/", function(err, files){
     for(f in files) {
        fs.readFile("/srv/run_master/glyphs/"+files[f], {encoding:"ASCII"}, function(err, data){
           if(!err) {glyphs_text = glyphs_text.concat(data); } /*TODO some sort of string buffer here*/ 
        });
     };
   });
};

fs.readdir("/srv/run_master/components/", function(err, files){
  for(f in files){ update(files[f]) };
  });

update_glyphs();

watcher = fs.watch("/srv/run_master/components", function(event, name){ update(name);});
watcher = fs.watch("/srv/run_master/glyphs", function(event, name){ update_glyphs() });

/*catalog of services*/
app.get("/catalog", function(req, res){
  res.type("application/json");
  res.send(JSON.stringify(catalog)); 
  });

/*catalog of UI glyphs*/
app.get("/glyphs", function(req, res){
  res.type("image/svg+xml");
  res.send(glyphs_text);
  });

/*list of jobs*/
app.get("/jobs", function(req, res){
  res.type("application/json");
  res.send(JSON.stringify(current_processes));
  });

/*TODO what directory does all this run from? what directory should it run from*/
/*run this please*/
app.all("/start/:name", function(req, res){
  var stuff = new Promise(function(fulfill, reject){
    /*I try to establish an output channel*/
    if( req.query.output == "websocket" )
      {
      http.get({hostname:'localhost', port:7070, path:'/create/'+req.params.name}, function(rs){ rs.on('data', function(r) { console.log(r); fulfill(); }) });
      } else { fulfill() }
    }).then(function(){
  var record = {};
  var sp = "/srv/run_master/bin/run_slave";
  var pa = ["websocket/"+req.params.name , req.params.name];
  console.log(sp);
  record[req.params.name] = ps.spawn(sp,pa);
  current_processes.push(record);
  res.type("application/json");
  res.send("set_output_websocket(\""+req.params.name+"\")");
  });
  });

server = 
  app.listen(9002);
